import Head from 'next/head';
import { useState, useEffect } from 'react';
import { Document, Page, pdfjs } from 'react-pdf';
import 'react-pdf/dist/esm/Page/AnnotationLayer.css';
import 'react-pdf/dist/esm/Page/TextLayer.css';
import styles from '../../styles/Profile.module.css';
import DefaultLayout from '../../components/layout/DefaultLayout';

// Configure the pdf.js worker with a more compatible version
pdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.js`;

export default function Profile({ meta }) {
  const [numPages, setNumPages] = useState(null);
  const [error, setError] = useState(null);
  const [useFallback, setUseFallback] = useState(false);
  const [isClient, setIsClient] = useState(false);
  const [isMobile, setIsMobile] = useState(false);
  const [showDownloadOnly, setShowDownloadOnly] = useState(false);

  const onDocumentLoadSuccess = ({ numPages }) => {
    setNumPages(numPages);
    setError(null);
    setUseFallback(false);
  };

  const onDocumentLoadError = (error) => {
    console.error('Failed to load PDF with react-pdf:', {
      message: error.message,
      stack: error.stack,
      name: error.name,
    });
    setUseFallback(true);
  };

  const handleIframeError = () => {
    setShowDownloadOnly(true);
    setError('Kh√¥ng th·ªÉ hi·ªÉn th·ªã PDF tr·ª±c ti·∫øp. Vui l√≤ng t·∫£i v·ªÅ ƒë·ªÉ xem.');
  };

  useEffect(() => {
    setIsClient(true);
    
    // Detect mobile device
    const checkMobile = () => {
      const isMobileDevice = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || 
                            window.innerWidth <= 768;
      setIsMobile(isMobileDevice);
      
      // On mobile, use Google Docs viewer as primary fallback
      if (isMobileDevice) {
        setUseFallback(true);
      }
    };
    
    checkMobile();
    
    // Listen for resize events
    const handleResize = () => {
      const isMobileDevice = window.innerWidth <= 768;
      setIsMobile(isMobileDevice);
    };
    
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  return (
    <DefaultLayout >
      <div className={styles.container} >
        <div className="mt-[60px] sm:mt-[91px]">

        </div>
        <main className={styles.main}>
          <div className={styles.pdfContainer}>
            {error && <p className={styles.error}>{error}</p>}
            {!useFallback ? (
              <Document
                file="/ho-so-nang-luc.pdf"
                onLoadSuccess={onDocumentLoadSuccess}
                onLoadError={onDocumentLoadError}
              >
                {numPages &&
                  Array.from(new Array(numPages), (el, index) => (
                    <Page
                      key={`page_${index + 1}`}
                      pageNumber={index + 1}
                      renderTextLayer={true}
                      renderAnnotationLayer={true}
                      className={styles.pdfPage}
                      scale={isMobile ? 0.8 : 1.0}
                      width={isClient ? (isMobile ? window.innerWidth - 20 : Math.min(window.innerWidth, 800)) : 800}
                    />
                  ))}
              </Document>
            ) : (
              <div className={styles.fallbackContainer}>
                {showDownloadOnly ? (
                  // Show download-only view when all viewers fail
                  <div className={styles.downloadOnlyContainer}>
                    <div className={styles.downloadIcon}>üìÑ</div>
                    <h3 className={styles.downloadTitle}>H·ªì s∆° nƒÉng l·ª±c ƒê·ªìng ph·ª•c Univi</h3>
                    <p className={styles.downloadDescription}>
                      ƒê·ªÉ xem h·ªì s∆° nƒÉng l·ª±c, vui l√≤ng t·∫£i file PDF v·ªÅ thi·∫øt b·ªã c·ªßa b·∫°n.
                    </p>
                    <a 
                      href="/ho-so-nang-luc.pdf" 
                      download 
                      className={styles.downloadButton}
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      üì• T·∫£i h·ªì s∆° nƒÉng l·ª±c (PDF)
                    </a>
                  </div>
                ) : (
                  <>
                    {isMobile ? (
                      // Use Google Docs Viewer for mobile - better compatibility
                      <iframe
                        src={`https://docs.google.com/gview?url=${encodeURIComponent(window.location.origin + '/ho-so-nang-luc.pdf')}&embedded=true`}
                        width="100%"
                        height="100%"
                        title="H·ªì s∆° nƒÉng l·ª±c ƒê·ªìng ph·ª•c Univi"
                        className={styles.pdfIframe}
                        style={{ border: 'none' }}
                        onError={handleIframeError}
                      />
                    ) : (
                      // Use direct PDF for desktop
                      <iframe
                        src="/ho-so-nang-luc.pdf#toolbar=0&view=FitH"
                        width="100%"
                        height="100%"
                        title="H·ªì s∆° nƒÉng l·ª±c ƒê·ªìng ph·ª•c Univi"
                        className={styles.pdfIframe}
                        style={{ border: 'none' }}
                        onError={handleIframeError}
                      />
                    )}
                    
                    {/* Show download link as fallback */}
                    <div className={styles.downloadSection}>
                      <p className={styles.downloadText}>
                        N·∫øu kh√¥ng th·ªÉ xem tr·ª±c ti·∫øp, b·∫°n c√≥ th·ªÉ t·∫£i v·ªÅ ƒë·ªÉ xem:
                      </p>
                      <a 
                        href="/ho-so-nang-luc.pdf" 
                        download 
                        className={styles.downloadLink}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        üìÑ T·∫£i h·ªì s∆° nƒÉng l·ª±c (PDF)
                      </a>
                    </div>
                  </>
                )}
              </div>
            )}
          </div>
        </main>
      </div>
    </DefaultLayout>
  );
}

export async function getServerSideProps() {
  const meta = {
    title: "H·ªì s∆° nƒÉng l·ª±c ƒê·ªìng ph·ª•c Univi - Qu·∫ßn √°o th·ªÉ thao ch·∫•t l∆∞·ª£ng cao",
    content:
      "ƒê·ªìng ph·ª•c Univi ‚Äì Th∆∞∆°ng hi·ªáu qu·∫ßn √°o th·ªÉ thao v·ªõi c√¥ng ngh·ªá Uni Dry, ch·∫•t li·ªáu v·∫£i chuy√™n d·ª•ng cho gym, yoga, ch·∫°y b·ªô v√† golf. An to√†n cho da, tho·∫£i m√°i khi v·∫≠n ƒë·ªông.",
    keywords:
      "h·ªì s∆° nƒÉng l·ª±c ƒê·ªìng ph·ª•c Univi, qu·∫ßn √°o th·ªÉ thao, c√¥ng ngh·ªá Uni Dry, v·∫£i th·ªÉ thao, trang ph·ª•c gym, qu·∫ßn √°o yoga, ch·∫°y b·ªô, v·∫£i an to√†n cho da",
    robots: "index, follow",
    author: "ƒê·ªìng ph·ª•c Univi",
    canonical: "https://dongphucunivi.com/ho-so-nang-luc",

    og: {
      title: "ƒê·ªìng ph·ª•c Univi ‚Äì Qu·∫ßn √°o th·ªÉ thao chuy√™n d·ª•ng",
      description:
        "Kh√°m ph√° h·ªì s∆° nƒÉng l·ª±c ƒê·ªìng ph·ª•c Univi: qu·∫ßn √°o th·ªÉ thao v·ªõi c√¥ng ngh·ªá Uni Dry, ch·∫•t li·ªáu cao c·∫•p, an to√†n cho da, ph√π h·ª£p cho gym, yoga, ch·∫°y b·ªô.",
      type: "website",
      image: "https://dongphucunivi.com/images/banner-1.webp",
      imageWidth: "1200",
      imageHeight: "630",
      url: "https://dongphucunivi.com/ho-so-nang-luc",
    },
    twitter: {
      card: "summary_large_image",
      title: "H·ªì s∆° nƒÉng l·ª±c ƒê·ªìng ph·ª•c Univi - Qu·∫ßn √°o th·ªÉ thao ch·∫•t l∆∞·ª£ng cao",
      description:
        "ƒê·ªìng ph·ª•c Univi ‚Äì Th∆∞∆°ng hi·ªáu qu·∫ßn √°o th·ªÉ thao v·ªõi c√¥ng ngh·ªá Uni Dry, ch·∫•t li·ªáu v·∫£i chuy√™n d·ª•ng cho gym, yoga, ch·∫°y b·ªô v√† golf.",
      image: "https://dongphucunivi.com/images/banner-1.webp",
    },
  };

  return {
    props: {
      meta,
    },
  };
}